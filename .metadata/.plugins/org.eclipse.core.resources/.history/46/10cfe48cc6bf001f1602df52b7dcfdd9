package model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import data.CumGiao;
import data.DonHang;
import data.KhoangCachCacTram;
import data.NSX;
import data.QuanLyDon;
import data.QuanLyXe;
import data.TramGiao;
import data.TuyenDuongDuocTaoRa;
import data.Xe;
import findingPath.BanDo;

public class Model {
	private ModelCumGiao modelCumGiao;
	private ModelTuyenDuong modelTuyenDuong;
	private ModelSapXep modelSapXep;
	private NSX nxs;

	public Model(NSX nsx) {
		this.nxs = nsx;
		this.modelCumGiao = new ModelCumGiao(nsx);
	}

	//lấy nsx
	public NSX getNSX() {
		return this.nxs;
	}

	//lấy danh sách cụm
	public List<CumGiao> getListCumGiao() {
		return modelCumGiao.getListCumGiao();
	}

	//lấy số lượng cụm
	public int soLuongCumDuocPhan() {
		return getListCumGiao().size();
	}

	//lấy ds đơn hàng cho từng xe
	// Xếp hàng lên xe
    public Map<Xe, List<DonHang>> xepHangLenXe() {
        Map<Xe, List<DonHang>> ketQuaXepHang = new HashMap<>();

        // Lấy danh sách cụm giao
        List<CumGiao> listCumGiao = getListCumGiao();

        for (CumGiao cum : listCumGiao) {
            List<Xe> listXe = cum.getListXe();
            if (listXe.isEmpty()) {
                System.out.println("Không có xe trong cụm " + cum.getId());
                continue;
            }

            for (Xe xe : listXe) {
                double sucChuaToiDa = xe.getSucChuaToiDa();
                List<DonHang> allDonHang = new ArrayList<>();
                List<TramGiao> tramList = cum.getListTram();

                // Tập hợp tất cả đơn hàng từ các trạm giao
                for (TramGiao tram : tramList) {
                    allDonHang.addAll(tram.getListDonHang());
                }

                // Gọi hàm knapsack để lấy danh sách đơn hàng phù hợp
                List<DonHang> danhSachXep = modelSapXep.knapsack(sucChuaToiDa, allDonHang);

                // Gắn danh sách đơn hàng vào xe
                xe.setDsDonHang(danhSachXep);

                // Lưu trạng thái xe và danh sách đơn hàng vào kết quả
                ketQuaXepHang.put(xe, danhSachXep);

                // Xóa các đơn hàng đã được sắp xếp khỏi trạm giao
                for (DonHang dh : danhSachXep) {
                    TramGiao tram = cum.getTram(dh.getTramGiao()); // Tìm trạm của đơn hàng
                    if (tram != null) {
                        tram.xoaDonHang(dh); // Xóa đơn hàng khỏi trạm
                    }
                }
            }
        }

        return ketQuaXepHang;
    }

	//lấy tuyến đường
	public Map<CumGiao, List<TuyenDuongDuocTaoRa>> tuyenduong() {
		List<TuyenDuongDuocTaoRa> tuyenduong = new ArrayList<TuyenDuongDuocTaoRa>();
		Map<CumGiao, List<TuyenDuongDuocTaoRa>> map = new HashMap<CumGiao, List<TuyenDuongDuocTaoRa>>();
		for (CumGiao cumGiao : modelCumGiao.getListCumGiao()) {
			modelTuyenDuong = new ModelTuyenDuong(cumGiao, new BanDo(nxs.getKc()), cumGiao.getListXe());
			tuyenduong = modelTuyenDuong.listTuyenDuongTaoRa();
			map.put(cumGiao, tuyenduong);
		}
		return map;
	}

	public TramGiao timTram(String name) {
		for (TramGiao tram : nxs.getDsTram()) {
			if (name.equals(tram.getTenTram())) {
				return tram;
			}
		}
		return null;
	}
}
